/*
 * OpenSearch
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2021-11-23
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetResponseContent {
  #[serde(rename = "_index")]
  pub _index: String,
  #[serde(rename = "_type", skip_serializing_if = "Option::is_none")]
  pub _type: Option<String>,
  #[serde(rename = "_id")]
  pub _id: String,
  #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
  pub version: Option<i32>,
  #[serde(rename = "seq_no", skip_serializing_if = "Option::is_none")]
  pub seq_no: Option<i64>,
  #[serde(rename = "primary_term", skip_serializing_if = "Option::is_none")]
  pub primary_term: Option<i64>,
  #[serde(rename = "found")]
  pub found: bool,
  #[serde(rename = "_routing", skip_serializing_if = "Option::is_none")]
  pub _routing: Option<String>,
  #[serde(rename = "_source", skip_serializing_if = "Option::is_none")]
  pub _source: Option<::std::collections::HashMap<String, serde_json::Value>>,
  #[serde(rename = "_fields", skip_serializing_if = "Option::is_none")]
  pub _fields: Option<::std::collections::HashMap<String, serde_json::Value>>,
}

impl GetResponseContent {
  pub fn new(_index: String, _id: String, found: bool) -> GetResponseContent {
    GetResponseContent {
      _index,
      _type: None,
      _id,
      version: None,
      seq_no: None,
      primary_term: None,
      found,
      _routing: None,
      _source: None,
      _fields: None,
    }
  }
}
