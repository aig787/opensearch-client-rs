/*
 * OpenSearch
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2021-11-23
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct AuditLogsConfig {
  #[serde(rename = "ignore_users", skip_serializing_if = "Option::is_none")]
  pub ignore_users: Option<Vec<String>>,
  #[serde(rename = "ignore_requests", skip_serializing_if = "Option::is_none")]
  pub ignore_requests: Option<Vec<String>>,
  #[serde(rename = "disabled_rest_categories", skip_serializing_if = "Option::is_none")]
  pub disabled_rest_categories: Option<Vec<String>>,
  #[serde(rename = "disabled_transport_categories", skip_serializing_if = "Option::is_none")]
  pub disabled_transport_categories: Option<Vec<String>>,
  #[serde(rename = "log_request_body", skip_serializing_if = "Option::is_none")]
  pub log_request_body: Option<bool>,
  #[serde(rename = "resolve_indices", skip_serializing_if = "Option::is_none")]
  pub resolve_indices: Option<bool>,
  #[serde(rename = "resolve_bulk_requests", skip_serializing_if = "Option::is_none")]
  pub resolve_bulk_requests: Option<bool>,
  #[serde(rename = "exclude_sensitive_headers", skip_serializing_if = "Option::is_none")]
  pub exclude_sensitive_headers: Option<bool>,
  #[serde(rename = "enable_transport", skip_serializing_if = "Option::is_none")]
  pub enable_transport: Option<bool>,
  #[serde(rename = "enable_rest", skip_serializing_if = "Option::is_none")]
  pub enable_rest: Option<bool>,
}

impl AuditLogsConfig {
  pub fn new() -> AuditLogsConfig {
    AuditLogsConfig {
      ignore_users: None,
      ignore_requests: None,
      disabled_rest_categories: None,
      disabled_transport_categories: None,
      log_request_body: None,
      resolve_indices: None,
      resolve_bulk_requests: None,
      exclude_sensitive_headers: None,
      enable_transport: None,
      enable_rest: None,
    }
  }
}
