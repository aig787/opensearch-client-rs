/*
 * OpenSearch
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2021-11-23
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct UserDefinedStructure {
  #[serde(rename = "alias", skip_serializing_if = "Option::is_none")]
  pub alias: Option<String>,
  #[serde(rename = "aliases", skip_serializing_if = "Option::is_none")]
  pub aliases: Option<Vec<String>>,
  #[serde(
    rename = "filter",
    default,
    with = "::serde_with::rust::double_option",
    skip_serializing_if = "Option::is_none"
  )]
  pub filter: Option<Option<serde_json::Value>>,
  #[serde(rename = "index", skip_serializing_if = "Option::is_none")]
  pub index: Option<String>,
  #[serde(rename = "indices", skip_serializing_if = "Option::is_none")]
  pub indices: Option<Vec<String>>,
  #[serde(rename = "index_routing", skip_serializing_if = "Option::is_none")]
  pub index_routing: Option<String>,
  #[serde(rename = "is_hidden", skip_serializing_if = "Option::is_none")]
  pub is_hidden: Option<bool>,
  #[serde(rename = "is_write_index", skip_serializing_if = "Option::is_none")]
  pub is_write_index: Option<bool>,
  #[serde(rename = "must_exist", skip_serializing_if = "Option::is_none")]
  pub must_exist: Option<String>,
  #[serde(rename = "routing", skip_serializing_if = "Option::is_none")]
  pub routing: Option<String>,
  #[serde(rename = "search_routing", skip_serializing_if = "Option::is_none")]
  pub search_routing: Option<String>,
}

impl UserDefinedStructure {
  pub fn new() -> UserDefinedStructure {
    UserDefinedStructure {
      alias: None,
      aliases: None,
      filter: None,
      index: None,
      indices: None,
      index_routing: None,
      is_hidden: None,
      is_write_index: None,
      must_exist: None,
      routing: None,
      search_routing: None,
    }
  }
}
