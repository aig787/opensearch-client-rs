/*
 * OpenSearch
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2021-11-23
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ComplianceConfig {
  #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
  pub enabled: Option<bool>,
  #[serde(rename = "write_log_diffs", skip_serializing_if = "Option::is_none")]
  pub write_log_diffs: Option<bool>,
  #[serde(
    rename = "read_watched_fields",
    default,
    with = "::serde_with::rust::double_option",
    skip_serializing_if = "Option::is_none"
  )]
  pub read_watched_fields: Option<Option<serde_json::Value>>,
  #[serde(rename = "read_ignore_users", skip_serializing_if = "Option::is_none")]
  pub read_ignore_users: Option<Vec<String>>,
  #[serde(rename = "write_watched_indices", skip_serializing_if = "Option::is_none")]
  pub write_watched_indices: Option<Vec<String>>,
  #[serde(rename = "write_ignore_users", skip_serializing_if = "Option::is_none")]
  pub write_ignore_users: Option<Vec<String>>,
  #[serde(rename = "read_metadata_only", skip_serializing_if = "Option::is_none")]
  pub read_metadata_only: Option<bool>,
  #[serde(rename = "write_metadata_only", skip_serializing_if = "Option::is_none")]
  pub write_metadata_only: Option<bool>,
  #[serde(rename = "external_config", skip_serializing_if = "Option::is_none")]
  pub external_config: Option<bool>,
  #[serde(rename = "internal_config", skip_serializing_if = "Option::is_none")]
  pub internal_config: Option<bool>,
}

impl ComplianceConfig {
  pub fn new() -> ComplianceConfig {
    ComplianceConfig {
      enabled: None,
      write_log_diffs: None,
      read_watched_fields: None,
      read_ignore_users: None,
      write_watched_indices: None,
      write_ignore_users: None,
      read_metadata_only: None,
      write_metadata_only: None,
      external_config: None,
      internal_config: None,
    }
  }
}
